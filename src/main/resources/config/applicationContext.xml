<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

       <!-- spring config -->
       <!-- <context:property-placeholder location="classpath:config.properties" /> -->
       <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath:config.properties</value>
                     </list>
              </property>
       </bean>

       <!-- dataSource 配置 -->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="jdbc:sqlite:database/dx.db"/>
              <property name="username" value=""/>
              <property name="password" value=""/>

       </bean>
       <!-- transaction manager, use DataSourceTransactionManager" for JDBC local tx -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>

       <!-- enable component scanning and autowire (beware that this does not enable com.lvdouwa.daxue.web.mapper scanning!) -->
       <context:component-scan base-package="com.lvdouwa.daxue.web.service" />

       <!-- enable transaction demarcation with annotations -->
       <tx:annotation-driven />

       <!-- define the SqlSessionFactory -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource" />
              <property name="typeAliasesPackage" value="com.lvdouwa.daxue.web.domain" />
              <property name="mapperLocations" value="classpath:com/lvdouwa/daxue/web/mapper/*.xml"/>

       </bean>

       <!-- 扫描mapper.java -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
             autowire="byName">
              <property name="basePackage" value="com.lvdouwa.daxue.web.dao" />
       </bean>
<!--       &lt;!&ndash; scan for mappers and let them be autowired &ndash;&gt;
       <mybatis:scan base-package="com.lvdouwa.daxue.web.dao" />-->

<!--       &lt;!&ndash; mybatis文件配置，扫描所有mapper文件 &ndash;&gt;
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource"
             p:configLocation="classpath:config/mybatis-config.xml"
             p:mapperLocations="classpath:com/lvdouwa/daxue/web/dao/FsxMapper.xml"
               />

       &lt;!&ndash; spring与mybatis整合配置，扫描所有dao &ndash;&gt;
       <bean class="org.mybatis.spring.com.lvdouwa.daxue.web.mapper.MapperScannerConfigurer" p:basePackage="com.lvdouwa.daxue.web.dao"
             p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

       &lt;!&ndash; 对dataSource 数据源进行事务管理 &ndash;&gt;
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
             p:dataSource-ref="dataSource"/>

       &lt;!&ndash; 事务管理 通知 &ndash;&gt;
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     &lt;!&ndash; 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 &ndash;&gt;
                     <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
                     <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
                     <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
                     &lt;!&ndash; select,count开头的方法,开启只读,提高数据库访问性能 &ndash;&gt;
                     <tx:method name="select*" read-only="true"/>
                     <tx:method name="count*" read-only="true"/>
                     &lt;!&ndash; 对其他方法 使用默认的事务管理 &ndash;&gt;
                     <tx:method name="*"/>
              </tx:attributes>
       </tx:advice>

       &lt;!&ndash; 事务 aop 配置 &ndash;&gt;
       <aop:config>
              <aop:pointcut id="serviceMethods" expression="execution(* com.lvdouwa.daxue.web.service..*(..))"/>
              <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
       </aop:config>

       &lt;!&ndash; 自动加载构建bean &ndash;&gt;
       <context:component-scan base-package="com.lvdouwa.daxue.web" />

       &lt;!&ndash; 开启AOP切面注解  &ndash;&gt;
       <aop:aspectj-autoproxy proxy-target-class="true"/>-->


</beans>